spring.datasource.url=postgres://pciezaxrrxwspl:344955c2ec30575d0c5c087bf6d9b350c07c58c5d6fa7e9a0827528122b6c815@ec2-54-165-164-38.compute-1.amazonaws.com:5432/dfua8tbnne1kkb

spring.jpa.herbernate.ddl-auto=create-drop

spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
spring.jpa.properties.hibernate.connection.CharSet=utf-8
spring.jpa.properties.hibernate.connection.useUnicode=true

server.tomcat.uri-encoding=UTF-8

# HTTP encoding (HttpEncodingProperties)
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.main.allow-bean-definition-overriding=true

spring.datasource.username=pciezaxrrxwspl

spring.datasource.password=344955c2ec30575d0c5c087bf6d9b350c07c58c5d6fa7e9a0827528122b6c815

# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=600MB
# Max Request Size
spring.servlet.multipart.max-request-size=600MB


# Keep the connection alive if idle for a long time (needed in production)

spring.datasource.testWhileIdle=true

spring.datasource.validationQuery=SELECT 1

# ===============================

# = JPA / HIBERNATE

# ===============================

# Show or not log for each sql query


# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database

# schema will be automatically created afresh for every start of application


# Naming strategy


# Allows Hibernate to generate SQL optimized for a particular DBMS

#max file and request size 
spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=11MB


server.port = 8080
